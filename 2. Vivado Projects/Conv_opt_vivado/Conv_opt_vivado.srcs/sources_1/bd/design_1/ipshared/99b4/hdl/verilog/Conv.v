// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv,hls_ip_2018_3_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.560550,HLS_SYN_LAT=217,HLS_SYN_TPT=none,HLS_SYN_MEM=18,HLS_SYN_DSP=28,HLS_SYN_FF=4752,HLS_SYN_LUT=3606,HLS_VERSION=2018_3_1}" *)

module Conv (
        ap_clk,
        ap_rst_n,
        data_in_TDATA,
        data_in_TVALID,
        data_in_TREADY,
        data_in_TLAST,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TREADY,
        data_out_TLAST
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_pp0_stage0 = 24'd16384;
parameter    ap_ST_fsm_pp0_stage1 = 24'd32768;
parameter    ap_ST_fsm_pp0_stage2 = 24'd65536;
parameter    ap_ST_fsm_pp0_stage3 = 24'd131072;
parameter    ap_ST_fsm_pp0_stage4 = 24'd262144;
parameter    ap_ST_fsm_state71 = 24'd524288;
parameter    ap_ST_fsm_state72 = 24'd1048576;
parameter    ap_ST_fsm_state73 = 24'd2097152;
parameter    ap_ST_fsm_state74 = 24'd4194304;
parameter    ap_ST_fsm_state75 = 24'd8388608;

input   ap_clk;
input   ap_rst_n;
input  [63:0] data_in_TDATA;
input   data_in_TVALID;
output   data_in_TREADY;
input  [0:0] data_in_TLAST;
output  [63:0] data_out_TDATA;
output   data_out_TVALID;
input   data_out_TREADY;
output  [0:0] data_out_TLAST;

 reg    ap_rst_n_inv;
reg   [63:0] data_in_V_data_0_data_out;
wire    data_in_V_data_0_vld_in;
wire    data_in_V_data_0_vld_out;
wire    data_in_V_data_0_ack_in;
reg    data_in_V_data_0_ack_out;
reg   [63:0] data_in_V_data_0_payload_A;
reg   [63:0] data_in_V_data_0_payload_B;
reg    data_in_V_data_0_sel_rd;
reg    data_in_V_data_0_sel_wr;
wire    data_in_V_data_0_sel;
wire    data_in_V_data_0_load_A;
wire    data_in_V_data_0_load_B;
reg   [1:0] data_in_V_data_0_state;
wire    data_in_V_data_0_state_cmp_full;
wire    data_in_V_last_V_0_vld_in;
reg    data_in_V_last_V_0_ack_out;
reg   [1:0] data_in_V_last_V_0_state;
reg   [63:0] data_out_V_data_1_data_out;
reg    data_out_V_data_1_vld_in;
wire    data_out_V_data_1_vld_out;
wire    data_out_V_data_1_ack_in;
wire    data_out_V_data_1_ack_out;
reg   [63:0] data_out_V_data_1_payload_A;
reg   [63:0] data_out_V_data_1_payload_B;
reg    data_out_V_data_1_sel_rd;
reg    data_out_V_data_1_sel_wr;
wire    data_out_V_data_1_sel;
wire    data_out_V_data_1_load_A;
wire    data_out_V_data_1_load_B;
reg   [1:0] data_out_V_data_1_state;
wire    data_out_V_data_1_state_cmp_full;
reg   [0:0] data_out_V_last_V_1_data_out;
reg    data_out_V_last_V_1_vld_in;
wire    data_out_V_last_V_1_vld_out;
wire    data_out_V_last_V_1_ack_in;
wire    data_out_V_last_V_1_ack_out;
reg   [0:0] data_out_V_last_V_1_payload_A;
reg   [0:0] data_out_V_last_V_1_payload_B;
reg    data_out_V_last_V_1_sel_rd;
reg    data_out_V_last_V_1_sel_wr;
wire    data_out_V_last_V_1_sel;
wire    data_out_V_last_V_1_load_A;
wire    data_out_V_last_V_1_load_B;
reg   [1:0] data_out_V_last_V_1_state;
wire    data_out_V_last_V_1_state_cmp_full;
reg    data_in_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond_flatten_fu_538_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond4_fu_655_p2;
reg    data_out_TDATA_blk_n;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
reg   [3:0] indvar_flatten1_reg_459;
reg   [1:0] i_3_reg_470;
reg   [1:0] j_3_reg_481;
wire    ap_CS_fsm_state1;
wire   [3:0] indvar_flatten_next_fu_544_p2;
reg    ap_block_state2;
wire   [1:0] tmp_mid2_v_fu_570_p3;
wire   [1:0] j_5_fu_615_p2;
wire   [1:0] i_6_fu_627_p2;
reg   [1:0] i_6_reg_1288;
wire    ap_CS_fsm_state3;
wire   [4:0] tmp_5_fu_649_p2;
reg   [4:0] tmp_5_reg_1293;
wire   [0:0] exitcond2_fu_621_p2;
wire   [1:0] j_6_fu_661_p2;
reg    ap_block_state4;
wire   [2:0] indvarinc_fu_681_p2;
reg   [2:0] indvarinc_reg_1306;
wire    ap_CS_fsm_state5;
wire   [5:0] tmp_7_fu_703_p2;
reg   [5:0] tmp_7_reg_1311;
wire   [2:0] indvarinc1_fu_709_p2;
wire    ap_CS_fsm_state6;
wire   [1:0] i_7_fu_747_p2;
reg   [1:0] i_7_reg_1330;
wire    ap_CS_fsm_state7;
wire   [4:0] tmp_16_fu_769_p2;
reg   [4:0] tmp_16_reg_1335;
wire   [0:0] exitcond5_fu_741_p2;
wire   [4:0] tmp_18_fu_791_p2;
reg   [4:0] tmp_18_reg_1340;
wire   [1:0] j_7_fu_803_p2;
reg   [1:0] j_7_reg_1348;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond7_fu_797_p2;
wire   [4:0] tmp_40_fu_827_p2;
reg   [4:0] tmp_40_reg_1358;
wire   [63:0] kernal_mat_q0;
reg   [63:0] kernal_mat_load_reg_1363;
wire    ap_CS_fsm_state10;
reg   [63:0] kernal_mat_load_1_reg_1368;
wire    ap_CS_fsm_state11;
wire   [63:0] kernal_mat_q1;
reg   [63:0] kernal_mat_load_2_reg_1373;
reg   [63:0] kernal_mat_load_3_reg_1378;
wire    ap_CS_fsm_state12;
reg   [63:0] kernal_mat_load_4_reg_1383;
reg   [63:0] kernal_mat_load_5_reg_1388;
wire    ap_CS_fsm_state13;
reg   [63:0] kernal_mat_load_6_reg_1393;
reg   [63:0] kernal_mat_load_7_reg_1398;
wire    ap_CS_fsm_state14;
reg   [63:0] kernal_mat_load_8_reg_1403;
wire   [0:0] exitcond_flatten1_fu_864_p2;
reg   [0:0] exitcond_flatten1_reg_1408;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state15_pp0_stage0_iter0;
wire    ap_block_state20_pp0_stage0_iter1;
wire    ap_block_state25_pp0_stage0_iter2;
wire    ap_block_state30_pp0_stage0_iter3;
wire    ap_block_state35_pp0_stage0_iter4;
wire    ap_block_state40_pp0_stage0_iter5;
wire    ap_block_state45_pp0_stage0_iter6;
wire    ap_block_state50_pp0_stage0_iter7;
wire    ap_block_state55_pp0_stage0_iter8;
wire    ap_block_state60_pp0_stage0_iter9;
wire    ap_block_state65_pp0_stage0_iter10;
wire    ap_block_state70_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten1_reg_1408_pp0_iter1_reg;
reg   [0:0] exitcond_flatten1_reg_1408_pp0_iter2_reg;
reg   [0:0] exitcond_flatten1_reg_1408_pp0_iter3_reg;
reg   [0:0] exitcond_flatten1_reg_1408_pp0_iter4_reg;
reg   [0:0] exitcond_flatten1_reg_1408_pp0_iter5_reg;
reg   [0:0] exitcond_flatten1_reg_1408_pp0_iter6_reg;
reg   [0:0] exitcond_flatten1_reg_1408_pp0_iter7_reg;
reg   [0:0] exitcond_flatten1_reg_1408_pp0_iter8_reg;
reg   [0:0] exitcond_flatten1_reg_1408_pp0_iter9_reg;
reg   [0:0] exitcond_flatten1_reg_1408_pp0_iter10_reg;
wire   [3:0] indvar_flatten_next1_fu_870_p2;
reg   [3:0] indvar_flatten_next1_reg_1412;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] j_3_mid2_fu_882_p3;
reg   [1:0] j_3_mid2_reg_1417;
wire   [1:0] tmp_9_mid2_fu_890_p3;
reg   [1:0] tmp_9_mid2_reg_1422;
wire   [5:0] tmp_25_fu_914_p2;
reg   [5:0] tmp_25_reg_1428;
wire   [1:0] tmp_21_1_mid2_fu_956_p3;
reg   [1:0] tmp_21_1_mid2_reg_1433;
wire   [5:0] tmp_16_cast1_fu_964_p1;
reg   [5:0] tmp_16_cast1_reg_1439;
wire   [4:0] p_sum1_fu_983_p2;
reg   [4:0] p_sum1_reg_1450;
reg   [4:0] p_sum1_reg_1450_pp0_iter1_reg;
reg   [4:0] p_sum1_reg_1450_pp0_iter2_reg;
reg   [4:0] p_sum1_reg_1450_pp0_iter3_reg;
reg   [4:0] p_sum1_reg_1450_pp0_iter4_reg;
reg   [4:0] p_sum1_reg_1450_pp0_iter5_reg;
reg   [4:0] p_sum1_reg_1450_pp0_iter6_reg;
reg   [4:0] p_sum1_reg_1450_pp0_iter7_reg;
reg   [4:0] p_sum1_reg_1450_pp0_iter8_reg;
reg   [4:0] p_sum1_reg_1450_pp0_iter9_reg;
reg   [4:0] p_sum1_reg_1450_pp0_iter10_reg;
wire   [1:0] j_9_fu_989_p2;
reg   [1:0] j_9_reg_1455;
wire   [5:0] tmp_25_0_1_cast_fu_995_p1;
reg   [5:0] tmp_25_0_1_cast_reg_1460;
wire   [5:0] tmp_27_fu_1024_p2;
reg   [5:0] tmp_27_reg_1471;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state16_pp0_stage1_iter0;
wire    ap_block_state21_pp0_stage1_iter1;
wire    ap_block_state26_pp0_stage1_iter2;
wire    ap_block_state31_pp0_stage1_iter3;
wire    ap_block_state36_pp0_stage1_iter4;
wire    ap_block_state41_pp0_stage1_iter5;
wire    ap_block_state46_pp0_stage1_iter6;
wire    ap_block_state51_pp0_stage1_iter7;
wire    ap_block_state56_pp0_stage1_iter8;
wire    ap_block_state61_pp0_stage1_iter9;
wire    ap_block_state66_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] padded_image_q0;
reg   [63:0] padded_image_load_reg_1482;
wire   [63:0] padded_image_q1;
reg   [63:0] padded_image_load_1_reg_1487;
wire   [5:0] tmp_25_0_2_cast_fu_1049_p1;
reg   [5:0] tmp_25_0_2_cast_reg_1492;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state17_pp0_stage2_iter0;
wire    ap_block_state22_pp0_stage2_iter1;
wire    ap_block_state27_pp0_stage2_iter2;
wire    ap_block_state32_pp0_stage2_iter3;
wire    ap_block_state37_pp0_stage2_iter4;
wire    ap_block_state42_pp0_stage2_iter5;
wire    ap_block_state47_pp0_stage2_iter6;
wire    ap_block_state52_pp0_stage2_iter7;
wire    ap_block_state57_pp0_stage2_iter8;
wire    ap_block_state62_pp0_stage2_iter9;
wire    ap_block_state67_pp0_stage2_iter10;
wire    ap_block_pp0_stage2_11001;
reg   [63:0] padded_image_load_2_reg_1513;
reg   [63:0] padded_image_load_3_reg_1518;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state18_pp0_stage3_iter0;
wire    ap_block_state23_pp0_stage3_iter1;
wire    ap_block_state28_pp0_stage3_iter2;
wire    ap_block_state33_pp0_stage3_iter3;
wire    ap_block_state38_pp0_stage3_iter4;
wire    ap_block_state43_pp0_stage3_iter5;
wire    ap_block_state48_pp0_stage3_iter6;
wire    ap_block_state53_pp0_stage3_iter7;
wire    ap_block_state58_pp0_stage3_iter8;
wire    ap_block_state63_pp0_stage3_iter9;
wire    ap_block_state68_pp0_stage3_iter10;
wire    ap_block_pp0_stage3_11001;
wire   [5:0] tmp_38_fu_1132_p2;
reg   [5:0] tmp_38_reg_1533;
reg   [63:0] padded_image_load_4_reg_1538;
reg   [63:0] padded_image_load_5_reg_1543;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state19_pp0_stage4_iter0;
wire    ap_block_state24_pp0_stage4_iter1;
wire    ap_block_state29_pp0_stage4_iter2;
wire    ap_block_state34_pp0_stage4_iter3;
wire    ap_block_state39_pp0_stage4_iter4;
wire    ap_block_state44_pp0_stage4_iter5;
wire    ap_block_state49_pp0_stage4_iter6;
wire    ap_block_state54_pp0_stage4_iter7;
wire    ap_block_state59_pp0_stage4_iter8;
wire    ap_block_state64_pp0_stage4_iter9;
wire    ap_block_state69_pp0_stage4_iter10;
wire    ap_block_pp0_stage4_11001;
reg   [63:0] padded_image_load_6_reg_1553;
reg   [63:0] padded_image_load_7_reg_1558;
reg   [63:0] padded_image_load_8_reg_1563;
reg    ap_enable_reg_pp0_iter1;
wire   [63:0] grp_fu_524_p2;
reg   [63:0] tmp_23_reg_1568;
wire   [63:0] grp_fu_528_p2;
reg   [63:0] tmp_27_0_1_reg_1573;
reg   [63:0] tmp_27_0_1_reg_1573_pp0_iter2_reg;
reg   [63:0] tmp_27_0_2_reg_1578;
reg   [63:0] tmp_27_0_2_reg_1578_pp0_iter2_reg;
reg   [63:0] tmp_27_0_2_reg_1578_pp0_iter3_reg;
reg   [63:0] tmp_27_1_reg_1583;
reg   [63:0] tmp_27_1_reg_1583_pp0_iter2_reg;
reg   [63:0] tmp_27_1_reg_1583_pp0_iter3_reg;
reg   [63:0] tmp_27_1_reg_1583_pp0_iter4_reg;
reg   [63:0] tmp_27_1_1_reg_1588;
reg   [63:0] tmp_27_1_1_reg_1588_pp0_iter2_reg;
reg   [63:0] tmp_27_1_1_reg_1588_pp0_iter3_reg;
reg   [63:0] tmp_27_1_1_reg_1588_pp0_iter4_reg;
reg   [63:0] tmp_27_1_1_reg_1588_pp0_iter5_reg;
reg   [63:0] tmp_27_1_2_reg_1593;
reg   [63:0] tmp_27_1_2_reg_1593_pp0_iter2_reg;
reg   [63:0] tmp_27_1_2_reg_1593_pp0_iter3_reg;
reg   [63:0] tmp_27_1_2_reg_1593_pp0_iter4_reg;
reg   [63:0] tmp_27_1_2_reg_1593_pp0_iter5_reg;
reg   [63:0] tmp_27_1_2_reg_1593_pp0_iter6_reg;
reg   [63:0] tmp_27_2_reg_1598;
reg   [63:0] tmp_27_2_reg_1598_pp0_iter2_reg;
reg   [63:0] tmp_27_2_reg_1598_pp0_iter3_reg;
reg   [63:0] tmp_27_2_reg_1598_pp0_iter4_reg;
reg   [63:0] tmp_27_2_reg_1598_pp0_iter5_reg;
reg   [63:0] tmp_27_2_reg_1598_pp0_iter6_reg;
reg   [63:0] tmp_27_2_reg_1598_pp0_iter7_reg;
reg   [63:0] tmp_27_2_1_reg_1603;
reg   [63:0] tmp_27_2_1_reg_1603_pp0_iter2_reg;
reg   [63:0] tmp_27_2_1_reg_1603_pp0_iter3_reg;
reg   [63:0] tmp_27_2_1_reg_1603_pp0_iter4_reg;
reg   [63:0] tmp_27_2_1_reg_1603_pp0_iter5_reg;
reg   [63:0] tmp_27_2_1_reg_1603_pp0_iter6_reg;
reg   [63:0] tmp_27_2_1_reg_1603_pp0_iter7_reg;
reg   [63:0] tmp_27_2_1_reg_1603_pp0_iter8_reg;
reg   [63:0] tmp_27_2_2_reg_1608;
reg    ap_enable_reg_pp0_iter2;
reg   [63:0] tmp_27_2_2_reg_1608_pp0_iter3_reg;
reg   [63:0] tmp_27_2_2_reg_1608_pp0_iter4_reg;
reg   [63:0] tmp_27_2_2_reg_1608_pp0_iter5_reg;
reg   [63:0] tmp_27_2_2_reg_1608_pp0_iter6_reg;
reg   [63:0] tmp_27_2_2_reg_1608_pp0_iter7_reg;
reg   [63:0] tmp_27_2_2_reg_1608_pp0_iter8_reg;
reg   [63:0] tmp_27_2_2_reg_1608_pp0_iter9_reg;
reg   [63:0] tmp_27_2_2_reg_1608_pp0_iter10_reg;
wire   [63:0] grp_fu_514_p2;
reg   [63:0] tmp_24_reg_1613;
wire   [63:0] grp_fu_519_p2;
reg   [63:0] tmp_28_0_1_reg_1618;
reg    ap_enable_reg_pp0_iter3;
reg   [63:0] tmp_28_0_2_reg_1623;
reg    ap_enable_reg_pp0_iter4;
reg   [63:0] tmp_28_1_reg_1628;
reg    ap_enable_reg_pp0_iter5;
reg   [63:0] tmp_28_1_1_reg_1633;
reg    ap_enable_reg_pp0_iter6;
reg   [63:0] tmp_28_1_2_reg_1638;
reg    ap_enable_reg_pp0_iter7;
reg   [63:0] tmp_28_2_reg_1643;
reg    ap_enable_reg_pp0_iter8;
reg   [63:0] tmp_28_2_1_reg_1648;
reg    ap_enable_reg_pp0_iter9;
wire   [1:0] i_9_fu_1151_p2;
reg   [1:0] i_9_reg_1656;
wire    ap_CS_fsm_state72;
reg    ap_block_state72;
wire   [4:0] tmp_14_fu_1173_p2;
reg   [4:0] tmp_14_reg_1661;
wire   [0:0] exitcond8_fu_1145_p2;
wire   [0:0] tmp_15_fu_1179_p2;
reg   [0:0] tmp_15_reg_1666;
wire   [1:0] j_8_fu_1191_p2;
reg   [1:0] j_8_reg_1674;
wire    ap_CS_fsm_state73;
wire   [0:0] exitcond_fu_1185_p2;
wire   [0:0] tmp_last_V_fu_1217_p2;
reg   [0:0] tmp_last_V_reg_1684;
wire   [63:0] empty_q0;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state15;
wire    ap_block_pp0_stage4_subdone;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg   [3:0] input_mat_address0;
reg    input_mat_ce0;
reg    input_mat_we0;
wire   [63:0] input_mat_q0;
reg   [3:0] kernal_mat_address0;
reg    kernal_mat_ce0;
reg    kernal_mat_we0;
reg   [3:0] kernal_mat_address1;
reg    kernal_mat_ce1;
reg   [4:0] padded_image_address0;
reg    padded_image_ce0;
reg    padded_image_we0;
reg   [63:0] padded_image_d0;
reg   [4:0] padded_image_address1;
reg    padded_image_ce1;
reg   [3:0] empty_address0;
reg    empty_ce0;
reg    empty_we0;
reg   [3:0] indvar_flatten_reg_359;
reg   [1:0] i_reg_370;
reg   [1:0] j_reg_381;
reg   [1:0] i_1_reg_392;
reg   [1:0] j_1_reg_403;
reg   [2:0] invdar_reg_414;
wire   [0:0] tmp_8_fu_729_p2;
wire   [0:0] tmp_2_fu_735_p2;
reg   [2:0] invdar1_reg_426;
reg   [1:0] i_2_reg_437;
reg   [1:0] j_2_reg_448;
wire    ap_CS_fsm_state9;
reg   [3:0] ap_phi_mux_indvar_flatten1_phi_fu_463_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_i_3_phi_fu_474_p4;
reg   [1:0] ap_phi_mux_j_3_phi_fu_485_p4;
reg   [1:0] i_4_reg_492;
wire    ap_CS_fsm_state71;
reg   [1:0] j_4_reg_503;
wire  signed [63:0] tmp_20_cast_fu_610_p1;
wire  signed [63:0] tmp_30_cast_fu_676_p1;
wire   [63:0] tmp_29_cast_fu_724_p1;
wire  signed [63:0] tmp_50_cast_fu_818_p1;
wire   [63:0] tmp_51_cast_fu_832_p1;
wire   [63:0] tmp_41_cast_fu_974_p1;
wire   [63:0] tmp_44_cast_fu_1005_p1;
wire   [63:0] tmp_42_cast_fu_1038_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_47_cast_fu_1058_p1;
wire   [63:0] tmp_45_cast_fu_1067_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_48_cast_fu_1076_p1;
wire   [63:0] tmp_43_cast_fu_1117_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_46_cast_fu_1127_p1;
wire   [63:0] tmp_49_cast_fu_1137_p1;
wire    ap_block_pp0_stage4;
wire  signed [63:0] p_sum1_cast_fu_1141_p1;
wire  signed [63:0] p_sum_cast_fu_1206_p1;
reg   [63:0] grp_fu_514_p0;
reg   [63:0] grp_fu_514_p1;
reg   [63:0] grp_fu_519_p0;
reg   [63:0] grp_fu_519_p1;
reg   [63:0] grp_fu_524_p0;
reg   [63:0] grp_fu_524_p1;
reg   [63:0] grp_fu_528_p0;
reg   [63:0] grp_fu_528_p1;
wire   [0:0] exitcond1_fu_556_p2;
wire   [1:0] i_5_fu_550_p2;
wire   [3:0] tmp_fu_582_p3;
wire   [4:0] p_shl2_cast_fu_590_p1;
wire   [4:0] tmp_mid2_cast_fu_578_p1;
wire   [1:0] j_mid2_fu_562_p3;
wire   [4:0] tmp_s_fu_594_p2;
wire   [4:0] tmp_4_cast_fu_600_p1;
wire   [4:0] tmp_1_fu_604_p2;
wire   [3:0] tmp_4_fu_637_p3;
wire   [4:0] p_shl3_cast_fu_645_p1;
wire   [4:0] tmp_1_cast_fu_633_p1;
wire   [4:0] tmp_cast_fu_667_p1;
wire   [4:0] tmp_11_fu_671_p2;
wire   [4:0] tmp_6_fu_691_p3;
wire   [5:0] p_shl4_cast_fu_699_p1;
wire   [5:0] tmp_6_cast_fu_687_p1;
wire   [5:0] tmp_7_cast_fu_715_p1;
wire   [5:0] tmp_9_fu_719_p2;
wire   [3:0] tmp_13_fu_757_p3;
wire   [4:0] p_shl5_cast_fu_765_p1;
wire   [4:0] tmp_3_cast_fu_753_p1;
wire   [3:0] tmp_17_fu_779_p3;
wire   [4:0] tmp_5_cast_fu_775_p1;
wire   [4:0] p_shl6_cast_fu_787_p1;
wire   [4:0] tmp_11_cast_fu_809_p1;
wire   [4:0] tmp_39_fu_813_p2;
wire   [4:0] tmp_12_cast_fu_823_p1;
wire   [3:0] p_shl_fu_840_p3;
wire   [4:0] p_shl_cast_fu_848_p1;
wire   [4:0] tmp_9_cast5_fu_836_p1;
wire   [0:0] exitcond3_fu_876_p2;
wire   [1:0] i_8_fu_858_p2;
wire   [3:0] tmp_20_fu_902_p3;
wire   [5:0] p_shl7_cast_fu_910_p1;
wire   [5:0] tmp_9_mid2_cast_fu_898_p1;
wire   [3:0] p_shl_mid1_fu_924_p3;
wire   [4:0] p_shl_cast_mid1_fu_932_p1;
wire   [4:0] tmp_9_cast5_mid1_fu_920_p1;
wire   [4:0] tmp_10_mid1_fu_936_p2;
wire   [4:0] tmp_10_fu_852_p2;
wire   [1:0] i_8_mid1_fu_950_p2;
wire   [5:0] tmp_30_fu_968_p2;
wire   [4:0] tmp_10_mid2_fu_942_p3;
wire   [4:0] tmp_16_cast_fu_979_p1;
wire   [5:0] tmp_33_fu_999_p2;
wire   [3:0] tmp_26_fu_1013_p3;
wire   [5:0] p_shl8_cast_fu_1020_p1;
wire   [5:0] tmp_21_1_mid2_cast_fu_1010_p1;
wire   [5:0] tmp_31_fu_1033_p2;
wire   [2:0] j_3_cast_fu_1030_p1;
wire   [2:0] tmp_24_0_2_fu_1043_p2;
wire   [5:0] tmp_36_fu_1053_p2;
wire   [5:0] tmp_34_fu_1063_p2;
wire   [5:0] tmp_37_fu_1072_p2;
wire   [2:0] tmp_21_2_mid2_v_v_fu_1081_p1;
wire   [2:0] tmp_21_2_mid2_v_fu_1084_p2;
wire   [4:0] tmp_28_fu_1094_p3;
wire   [5:0] p_shl9_cast_fu_1102_p1;
wire   [5:0] tmp_21_2_mid2_cast_fu_1090_p1;
wire   [5:0] tmp_29_fu_1106_p2;
wire   [5:0] tmp_32_fu_1112_p2;
wire   [5:0] tmp_35_fu_1122_p2;
wire   [3:0] p_shl1_fu_1161_p3;
wire   [4:0] p_shl1_cast_fu_1169_p1;
wire   [4:0] tmp_13_cast2_fu_1157_p1;
wire   [4:0] tmp_18_cast_fu_1197_p1;
wire   [4:0] p_sum_fu_1201_p2;
wire   [0:0] tmp_19_fu_1211_p2;
reg   [23:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 data_in_V_data_0_sel_rd = 1'b0;
#0 data_in_V_data_0_sel_wr = 1'b0;
#0 data_in_V_data_0_state = 2'd0;
#0 data_in_V_last_V_0_state = 2'd0;
#0 data_out_V_data_1_sel_rd = 1'b0;
#0 data_out_V_data_1_sel_wr = 1'b0;
#0 data_out_V_data_1_state = 2'd0;
#0 data_out_V_last_V_1_sel_rd = 1'b0;
#0 data_out_V_last_V_1_sel_wr = 1'b0;
#0 data_out_V_last_V_1_state = 2'd0;
#0 ap_CS_fsm = 24'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
end

Conv_input_mat #(
    .DataWidth( 64 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
input_mat_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_mat_address0),
    .ce0(input_mat_ce0),
    .we0(input_mat_we0),
    .d0(data_in_V_data_0_data_out),
    .q0(input_mat_q0)
);

Conv_kernal_mat #(
    .DataWidth( 64 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernal_mat_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(kernal_mat_address0),
    .ce0(kernal_mat_ce0),
    .we0(kernal_mat_we0),
    .d0(data_in_V_data_0_data_out),
    .q0(kernal_mat_q0),
    .address1(kernal_mat_address1),
    .ce1(kernal_mat_ce1),
    .q1(kernal_mat_q1)
);

Conv_padded_image #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
padded_image_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(padded_image_address0),
    .ce0(padded_image_ce0),
    .we0(padded_image_we0),
    .d0(padded_image_d0),
    .q0(padded_image_q0),
    .address1(padded_image_address1),
    .ce1(padded_image_ce1),
    .q1(padded_image_q1)
);

Conv_input_mat #(
    .DataWidth( 64 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
empty_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(empty_address0),
    .ce0(empty_ce0),
    .we0(empty_we0),
    .d0(grp_fu_514_p2),
    .q0(empty_q0)
);

Conv_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Conv_dadd_64ns_64ns_64_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_514_p0),
    .din1(grp_fu_514_p1),
    .ce(1'b1),
    .dout(grp_fu_514_p2)
);

Conv_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Conv_dadd_64ns_64ns_64_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_519_p0),
    .din1(grp_fu_519_p1),
    .ce(1'b1),
    .dout(grp_fu_519_p2)
);

Conv_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Conv_dmul_64ns_64ns_64_5_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_524_p0),
    .din1(grp_fu_524_p1),
    .ce(1'b1),
    .dout(grp_fu_524_p2)
);

Conv_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Conv_dmul_64ns_64ns_64_5_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_528_p0),
    .din1(grp_fu_528_p1),
    .ce(1'b1),
    .dout(grp_fu_528_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_data_0_sel_rd <= 1'b0;
    end else begin
        if (((data_in_V_data_0_ack_out == 1'b1) & (data_in_V_data_0_vld_out == 1'b1))) begin
            data_in_V_data_0_sel_rd <= ~data_in_V_data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_data_0_sel_wr <= 1'b0;
    end else begin
        if (((data_in_V_data_0_ack_in == 1'b1) & (data_in_V_data_0_vld_in == 1'b1))) begin
            data_in_V_data_0_sel_wr <= ~data_in_V_data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_data_0_state <= 2'd0;
    end else begin
        if ((((data_in_V_data_0_state == 2'd2) & (data_in_V_data_0_vld_in == 1'b0)) | ((data_in_V_data_0_state == 2'd3) & (data_in_V_data_0_vld_in == 1'b0) & (data_in_V_data_0_ack_out == 1'b1)))) begin
            data_in_V_data_0_state <= 2'd2;
        end else if ((((data_in_V_data_0_state == 2'd1) & (data_in_V_data_0_ack_out == 1'b0)) | ((data_in_V_data_0_state == 2'd3) & (data_in_V_data_0_ack_out == 1'b0) & (data_in_V_data_0_vld_in == 1'b1)))) begin
            data_in_V_data_0_state <= 2'd1;
        end else if (((~((data_in_V_data_0_vld_in == 1'b0) & (data_in_V_data_0_ack_out == 1'b1)) & ~((data_in_V_data_0_ack_out == 1'b0) & (data_in_V_data_0_vld_in == 1'b1)) & (data_in_V_data_0_state == 2'd3)) | ((data_in_V_data_0_state == 2'd1) & (data_in_V_data_0_ack_out == 1'b1)) | ((data_in_V_data_0_state == 2'd2) & (data_in_V_data_0_vld_in == 1'b1)))) begin
            data_in_V_data_0_state <= 2'd3;
        end else begin
            data_in_V_data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_last_V_0_state <= 2'd0;
    end else begin
        if ((((data_in_V_last_V_0_state == 2'd2) & (data_in_V_last_V_0_vld_in == 1'b0)) | ((data_in_V_last_V_0_state == 2'd3) & (data_in_V_last_V_0_vld_in == 1'b0) & (data_in_V_last_V_0_ack_out == 1'b1)))) begin
            data_in_V_last_V_0_state <= 2'd2;
        end else if ((((data_in_V_last_V_0_state == 2'd1) & (data_in_V_last_V_0_ack_out == 1'b0)) | ((data_in_V_last_V_0_state == 2'd3) & (data_in_V_last_V_0_ack_out == 1'b0) & (data_in_V_last_V_0_vld_in == 1'b1)))) begin
            data_in_V_last_V_0_state <= 2'd1;
        end else if (((~((data_in_V_last_V_0_vld_in == 1'b0) & (data_in_V_last_V_0_ack_out == 1'b1)) & ~((data_in_V_last_V_0_ack_out == 1'b0) & (data_in_V_last_V_0_vld_in == 1'b1)) & (data_in_V_last_V_0_state == 2'd3)) | ((data_in_V_last_V_0_state == 2'd1) & (data_in_V_last_V_0_ack_out == 1'b1)) | ((data_in_V_last_V_0_state == 2'd2) & (data_in_V_last_V_0_vld_in == 1'b1)))) begin
            data_in_V_last_V_0_state <= 2'd3;
        end else begin
            data_in_V_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_data_1_sel_rd <= 1'b0;
    end else begin
        if (((data_out_V_data_1_ack_out == 1'b1) & (data_out_V_data_1_vld_out == 1'b1))) begin
            data_out_V_data_1_sel_rd <= ~data_out_V_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_data_1_sel_wr <= 1'b0;
    end else begin
        if (((data_out_V_data_1_ack_in == 1'b1) & (data_out_V_data_1_vld_in == 1'b1))) begin
            data_out_V_data_1_sel_wr <= ~data_out_V_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_data_1_state <= 2'd0;
    end else begin
        if ((((data_out_V_data_1_state == 2'd2) & (data_out_V_data_1_vld_in == 1'b0)) | ((data_out_V_data_1_state == 2'd3) & (data_out_V_data_1_vld_in == 1'b0) & (data_out_V_data_1_ack_out == 1'b1)))) begin
            data_out_V_data_1_state <= 2'd2;
        end else if ((((data_out_V_data_1_state == 2'd1) & (data_out_V_data_1_ack_out == 1'b0)) | ((data_out_V_data_1_state == 2'd3) & (data_out_V_data_1_ack_out == 1'b0) & (data_out_V_data_1_vld_in == 1'b1)))) begin
            data_out_V_data_1_state <= 2'd1;
        end else if (((~((data_out_V_data_1_vld_in == 1'b0) & (data_out_V_data_1_ack_out == 1'b1)) & ~((data_out_V_data_1_ack_out == 1'b0) & (data_out_V_data_1_vld_in == 1'b1)) & (data_out_V_data_1_state == 2'd3)) | ((data_out_V_data_1_state == 2'd1) & (data_out_V_data_1_ack_out == 1'b1)) | ((data_out_V_data_1_state == 2'd2) & (data_out_V_data_1_vld_in == 1'b1)))) begin
            data_out_V_data_1_state <= 2'd3;
        end else begin
            data_out_V_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((data_out_V_last_V_1_ack_out == 1'b1) & (data_out_V_last_V_1_vld_out == 1'b1))) begin
            data_out_V_last_V_1_sel_rd <= ~data_out_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((data_out_V_last_V_1_ack_in == 1'b1) & (data_out_V_last_V_1_vld_in == 1'b1))) begin
            data_out_V_last_V_1_sel_wr <= ~data_out_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((data_out_V_last_V_1_state == 2'd2) & (data_out_V_last_V_1_vld_in == 1'b0)) | ((data_out_V_last_V_1_state == 2'd3) & (data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_ack_out == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd2;
        end else if ((((data_out_V_last_V_1_state == 2'd1) & (data_out_V_last_V_1_ack_out == 1'b0)) | ((data_out_V_last_V_1_state == 2'd3) & (data_out_V_last_V_1_ack_out == 1'b0) & (data_out_V_last_V_1_vld_in == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd1;
        end else if (((~((data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_ack_out == 1'b1)) & ~((data_out_V_last_V_1_ack_out == 1'b0) & (data_out_V_last_V_1_vld_in == 1'b1)) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_V_last_V_1_state == 2'd1) & (data_out_V_last_V_1_ack_out == 1'b1)) | ((data_out_V_last_V_1_state == 2'd2) & (data_out_V_last_V_1_vld_in == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd3;
        end else begin
            data_out_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten_fu_538_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond_flatten_fu_538_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_392 <= 2'd0;
    end else if ((~((exitcond4_fu_655_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond4_fu_655_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_1_reg_392 <= i_6_reg_1288;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_735_p2 == 1'd1) & (tmp_8_fu_729_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_2_reg_437 <= 2'd0;
    end else if (((exitcond7_fu_797_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_2_reg_437 <= i_7_reg_1330;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_1408 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_3_reg_470 <= tmp_9_mid2_reg_1422;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        i_3_reg_470 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        i_4_reg_492 <= 2'd0;
    end else if (((exitcond_fu_1185_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
        i_4_reg_492 <= i_9_reg_1656;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten_fu_538_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond_flatten_fu_538_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_370 <= tmp_mid2_v_fu_570_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        i_reg_370 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_1408 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten1_reg_459 <= indvar_flatten_next1_reg_1412;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        indvar_flatten1_reg_459 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten_fu_538_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond_flatten_fu_538_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_359 <= indvar_flatten_next_fu_544_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        indvar_flatten_reg_359 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_729_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        invdar1_reg_426 <= indvarinc1_fu_709_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        invdar1_reg_426 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        invdar_reg_414 <= 3'd0;
    end else if (((tmp_8_fu_729_p2 == 1'd1) & (tmp_2_fu_735_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        invdar_reg_414 <= indvarinc_reg_1306;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond4_fu_655_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond4_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j_1_reg_403 <= j_6_fu_661_p2;
    end else if (((exitcond2_fu_621_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j_1_reg_403 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j_2_reg_448 <= j_7_reg_1348;
    end else if (((exitcond5_fu_741_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        j_2_reg_448 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_1408 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_3_reg_481 <= j_9_reg_1455;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        j_3_reg_481 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state75) & (data_out_V_data_1_ack_in == 1'b1))) begin
        j_4_reg_503 <= j_8_reg_1674;
    end else if ((~((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0)) & (exitcond8_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state72))) begin
        j_4_reg_503 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten_fu_538_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond_flatten_fu_538_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_381 <= j_5_fu_615_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        j_reg_381 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((data_in_V_data_0_load_A == 1'b1)) begin
        data_in_V_data_0_payload_A <= data_in_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((data_in_V_data_0_load_B == 1'b1)) begin
        data_in_V_data_0_payload_B <= data_in_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_data_1_load_A == 1'b1)) begin
        data_out_V_data_1_payload_A <= empty_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_data_1_load_B == 1'b1)) begin
        data_out_V_data_1_payload_B <= empty_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_last_V_1_load_A == 1'b1)) begin
        data_out_V_last_V_1_payload_A <= tmp_last_V_reg_1684;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_last_V_1_load_B == 1'b1)) begin
        data_out_V_last_V_1_payload_B <= tmp_last_V_reg_1684;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten1_reg_1408 <= exitcond_flatten1_fu_864_p2;
        exitcond_flatten1_reg_1408_pp0_iter10_reg <= exitcond_flatten1_reg_1408_pp0_iter9_reg;
        exitcond_flatten1_reg_1408_pp0_iter1_reg <= exitcond_flatten1_reg_1408;
        exitcond_flatten1_reg_1408_pp0_iter2_reg <= exitcond_flatten1_reg_1408_pp0_iter1_reg;
        exitcond_flatten1_reg_1408_pp0_iter3_reg <= exitcond_flatten1_reg_1408_pp0_iter2_reg;
        exitcond_flatten1_reg_1408_pp0_iter4_reg <= exitcond_flatten1_reg_1408_pp0_iter3_reg;
        exitcond_flatten1_reg_1408_pp0_iter5_reg <= exitcond_flatten1_reg_1408_pp0_iter4_reg;
        exitcond_flatten1_reg_1408_pp0_iter6_reg <= exitcond_flatten1_reg_1408_pp0_iter5_reg;
        exitcond_flatten1_reg_1408_pp0_iter7_reg <= exitcond_flatten1_reg_1408_pp0_iter6_reg;
        exitcond_flatten1_reg_1408_pp0_iter8_reg <= exitcond_flatten1_reg_1408_pp0_iter7_reg;
        exitcond_flatten1_reg_1408_pp0_iter9_reg <= exitcond_flatten1_reg_1408_pp0_iter8_reg;
        p_sum1_reg_1450_pp0_iter10_reg <= p_sum1_reg_1450_pp0_iter9_reg;
        p_sum1_reg_1450_pp0_iter1_reg <= p_sum1_reg_1450;
        p_sum1_reg_1450_pp0_iter2_reg <= p_sum1_reg_1450_pp0_iter1_reg;
        p_sum1_reg_1450_pp0_iter3_reg <= p_sum1_reg_1450_pp0_iter2_reg;
        p_sum1_reg_1450_pp0_iter4_reg <= p_sum1_reg_1450_pp0_iter3_reg;
        p_sum1_reg_1450_pp0_iter5_reg <= p_sum1_reg_1450_pp0_iter4_reg;
        p_sum1_reg_1450_pp0_iter6_reg <= p_sum1_reg_1450_pp0_iter5_reg;
        p_sum1_reg_1450_pp0_iter7_reg <= p_sum1_reg_1450_pp0_iter6_reg;
        p_sum1_reg_1450_pp0_iter8_reg <= p_sum1_reg_1450_pp0_iter7_reg;
        p_sum1_reg_1450_pp0_iter9_reg <= p_sum1_reg_1450_pp0_iter8_reg;
        tmp_27_2_2_reg_1608_pp0_iter10_reg <= tmp_27_2_2_reg_1608_pp0_iter9_reg;
        tmp_27_2_2_reg_1608_pp0_iter3_reg <= tmp_27_2_2_reg_1608;
        tmp_27_2_2_reg_1608_pp0_iter4_reg <= tmp_27_2_2_reg_1608_pp0_iter3_reg;
        tmp_27_2_2_reg_1608_pp0_iter5_reg <= tmp_27_2_2_reg_1608_pp0_iter4_reg;
        tmp_27_2_2_reg_1608_pp0_iter6_reg <= tmp_27_2_2_reg_1608_pp0_iter5_reg;
        tmp_27_2_2_reg_1608_pp0_iter7_reg <= tmp_27_2_2_reg_1608_pp0_iter6_reg;
        tmp_27_2_2_reg_1608_pp0_iter8_reg <= tmp_27_2_2_reg_1608_pp0_iter7_reg;
        tmp_27_2_2_reg_1608_pp0_iter9_reg <= tmp_27_2_2_reg_1608_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_6_reg_1288 <= i_6_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_7_reg_1330 <= i_7_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state72))) begin
        i_9_reg_1656 <= i_9_fu_1151_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next1_reg_1412 <= indvar_flatten_next1_fu_870_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvarinc_reg_1306 <= indvarinc_fu_681_p2;
        tmp_7_reg_1311 <= tmp_7_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_864_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_3_mid2_reg_1417 <= j_3_mid2_fu_882_p3;
        p_sum1_reg_1450 <= p_sum1_fu_983_p2;
        tmp_16_cast1_reg_1439[1 : 0] <= tmp_16_cast1_fu_964_p1[1 : 0];
        tmp_21_1_mid2_reg_1433 <= tmp_21_1_mid2_fu_956_p3;
        tmp_25_0_1_cast_reg_1460[1 : 0] <= tmp_25_0_1_cast_fu_995_p1[1 : 0];
        tmp_25_reg_1428 <= tmp_25_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        j_7_reg_1348 <= j_7_fu_803_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        j_8_reg_1674 <= j_8_fu_1191_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_864_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_9_reg_1455 <= j_9_fu_989_p2;
        tmp_9_mid2_reg_1422 <= tmp_9_mid2_fu_890_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        kernal_mat_load_1_reg_1368 <= kernal_mat_q0;
        kernal_mat_load_2_reg_1373 <= kernal_mat_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        kernal_mat_load_3_reg_1378 <= kernal_mat_q1;
        kernal_mat_load_4_reg_1383 <= kernal_mat_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        kernal_mat_load_5_reg_1388 <= kernal_mat_q1;
        kernal_mat_load_6_reg_1393 <= kernal_mat_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        kernal_mat_load_7_reg_1398 <= kernal_mat_q1;
        kernal_mat_load_8_reg_1403 <= kernal_mat_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        kernal_mat_load_reg_1363 <= kernal_mat_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_1408 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        padded_image_load_1_reg_1487 <= padded_image_q1;
        padded_image_load_reg_1482 <= padded_image_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten1_reg_1408 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        padded_image_load_2_reg_1513 <= padded_image_q1;
        padded_image_load_3_reg_1518 <= padded_image_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten1_reg_1408 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        padded_image_load_4_reg_1538 <= padded_image_q1;
        padded_image_load_5_reg_1543 <= padded_image_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten1_reg_1408 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        padded_image_load_6_reg_1553 <= padded_image_q1;
        padded_image_load_7_reg_1558 <= padded_image_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_1408 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        padded_image_load_8_reg_1563 <= padded_image_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0)) & (exitcond8_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state72))) begin
        tmp_14_reg_1661 <= tmp_14_fu_1173_p2;
        tmp_15_reg_1666 <= tmp_15_fu_1179_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_741_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_16_reg_1335 <= tmp_16_fu_769_p2;
        tmp_18_reg_1340 <= tmp_18_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_1408_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_23_reg_1568 <= grp_fu_524_p2;
        tmp_27_0_1_reg_1573 <= grp_fu_528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_1408_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_24_reg_1613 <= grp_fu_514_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_1408 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_25_0_2_cast_reg_1492[2 : 0] <= tmp_25_0_2_cast_fu_1049_p1[2 : 0];
        tmp_27_reg_1471 <= tmp_27_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_27_0_1_reg_1573_pp0_iter2_reg <= tmp_27_0_1_reg_1573;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten1_reg_1408_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_27_0_2_reg_1578 <= grp_fu_524_p2;
        tmp_27_1_reg_1583 <= grp_fu_528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_27_0_2_reg_1578_pp0_iter2_reg <= tmp_27_0_2_reg_1578;
        tmp_27_0_2_reg_1578_pp0_iter3_reg <= tmp_27_0_2_reg_1578_pp0_iter2_reg;
        tmp_27_1_reg_1583_pp0_iter2_reg <= tmp_27_1_reg_1583;
        tmp_27_1_reg_1583_pp0_iter3_reg <= tmp_27_1_reg_1583_pp0_iter2_reg;
        tmp_27_1_reg_1583_pp0_iter4_reg <= tmp_27_1_reg_1583_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten1_reg_1408_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_27_1_1_reg_1588 <= grp_fu_524_p2;
        tmp_27_1_2_reg_1593 <= grp_fu_528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_27_1_1_reg_1588_pp0_iter2_reg <= tmp_27_1_1_reg_1588;
        tmp_27_1_1_reg_1588_pp0_iter3_reg <= tmp_27_1_1_reg_1588_pp0_iter2_reg;
        tmp_27_1_1_reg_1588_pp0_iter4_reg <= tmp_27_1_1_reg_1588_pp0_iter3_reg;
        tmp_27_1_1_reg_1588_pp0_iter5_reg <= tmp_27_1_1_reg_1588_pp0_iter4_reg;
        tmp_27_1_2_reg_1593_pp0_iter2_reg <= tmp_27_1_2_reg_1593;
        tmp_27_1_2_reg_1593_pp0_iter3_reg <= tmp_27_1_2_reg_1593_pp0_iter2_reg;
        tmp_27_1_2_reg_1593_pp0_iter4_reg <= tmp_27_1_2_reg_1593_pp0_iter3_reg;
        tmp_27_1_2_reg_1593_pp0_iter5_reg <= tmp_27_1_2_reg_1593_pp0_iter4_reg;
        tmp_27_1_2_reg_1593_pp0_iter6_reg <= tmp_27_1_2_reg_1593_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten1_reg_1408_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_27_2_1_reg_1603 <= grp_fu_528_p2;
        tmp_27_2_reg_1598 <= grp_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_27_2_1_reg_1603_pp0_iter2_reg <= tmp_27_2_1_reg_1603;
        tmp_27_2_1_reg_1603_pp0_iter3_reg <= tmp_27_2_1_reg_1603_pp0_iter2_reg;
        tmp_27_2_1_reg_1603_pp0_iter4_reg <= tmp_27_2_1_reg_1603_pp0_iter3_reg;
        tmp_27_2_1_reg_1603_pp0_iter5_reg <= tmp_27_2_1_reg_1603_pp0_iter4_reg;
        tmp_27_2_1_reg_1603_pp0_iter6_reg <= tmp_27_2_1_reg_1603_pp0_iter5_reg;
        tmp_27_2_1_reg_1603_pp0_iter7_reg <= tmp_27_2_1_reg_1603_pp0_iter6_reg;
        tmp_27_2_1_reg_1603_pp0_iter8_reg <= tmp_27_2_1_reg_1603_pp0_iter7_reg;
        tmp_27_2_reg_1598_pp0_iter2_reg <= tmp_27_2_reg_1598;
        tmp_27_2_reg_1598_pp0_iter3_reg <= tmp_27_2_reg_1598_pp0_iter2_reg;
        tmp_27_2_reg_1598_pp0_iter4_reg <= tmp_27_2_reg_1598_pp0_iter3_reg;
        tmp_27_2_reg_1598_pp0_iter5_reg <= tmp_27_2_reg_1598_pp0_iter4_reg;
        tmp_27_2_reg_1598_pp0_iter6_reg <= tmp_27_2_reg_1598_pp0_iter5_reg;
        tmp_27_2_reg_1598_pp0_iter7_reg <= tmp_27_2_reg_1598_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_1408_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_27_2_2_reg_1608 <= grp_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_1408_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_28_0_1_reg_1618 <= grp_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten1_reg_1408_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_28_0_2_reg_1623 <= grp_fu_514_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten1_reg_1408_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_28_1_1_reg_1633 <= grp_fu_514_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten1_reg_1408_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_28_1_2_reg_1638 <= grp_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten1_reg_1408_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_28_1_reg_1628 <= grp_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten1_reg_1408_pp0_iter9_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_28_2_1_reg_1648 <= grp_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten1_reg_1408_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_28_2_reg_1643 <= grp_fu_514_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten1_reg_1408 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_38_reg_1533 <= tmp_38_fu_1132_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_40_reg_1358 <= tmp_40_fu_827_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_621_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_5_reg_1293 <= tmp_5_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1185_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        tmp_last_V_reg_1684 <= tmp_last_V_fu_1217_p2;
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_864_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten1_reg_1408 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_3_phi_fu_474_p4 = tmp_9_mid2_reg_1422;
    end else begin
        ap_phi_mux_i_3_phi_fu_474_p4 = i_3_reg_470;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten1_reg_1408 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten1_phi_fu_463_p4 = indvar_flatten_next1_reg_1412;
    end else begin
        ap_phi_mux_indvar_flatten1_phi_fu_463_p4 = indvar_flatten1_reg_459;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten1_reg_1408 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_3_phi_fu_485_p4 = j_9_reg_1455;
    end else begin
        ap_phi_mux_j_3_phi_fu_485_p4 = j_3_reg_481;
    end
end

always @ (*) begin
    if ((((exitcond4_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((exitcond_flatten_fu_538_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        data_in_TDATA_blk_n = data_in_V_data_0_state[1'd0];
    end else begin
        data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((exitcond4_fu_655_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond4_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~((exitcond_flatten_fu_538_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond_flatten_fu_538_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        data_in_V_data_0_ack_out = 1'b1;
    end else begin
        data_in_V_data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((data_in_V_data_0_sel == 1'b1)) begin
        data_in_V_data_0_data_out = data_in_V_data_0_payload_B;
    end else begin
        data_in_V_data_0_data_out = data_in_V_data_0_payload_A;
    end
end

always @ (*) begin
    if (((~((exitcond4_fu_655_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond4_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~((exitcond_flatten_fu_538_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond_flatten_fu_538_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        data_in_V_last_V_0_ack_out = 1'b1;
    end else begin
        data_in_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_out_TDATA_blk_n = data_out_V_data_1_state[1'd1];
    end else begin
        data_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((data_out_V_data_1_sel == 1'b1)) begin
        data_out_V_data_1_data_out = data_out_V_data_1_payload_B;
    end else begin
        data_out_V_data_1_data_out = data_out_V_data_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) & (data_out_V_data_1_ack_in == 1'b1))) begin
        data_out_V_data_1_vld_in = 1'b1;
    end else begin
        data_out_V_data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((data_out_V_last_V_1_sel == 1'b1)) begin
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_B;
    end else begin
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) & (data_out_V_data_1_ack_in == 1'b1))) begin
        data_out_V_last_V_1_vld_in = 1'b1;
    end else begin
        data_out_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        empty_address0 = p_sum_cast_fu_1206_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_address0 = p_sum1_cast_fu_1141_p1;
    end else begin
        empty_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        empty_ce0 = 1'b1;
    end else begin
        empty_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_1408_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_we0 = 1'b1;
    end else begin
        empty_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_514_p0 = tmp_28_2_1_reg_1648;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_514_p0 = tmp_28_1_2_reg_1638;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_514_p0 = tmp_28_1_reg_1628;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_514_p0 = tmp_28_0_1_reg_1618;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_514_p0 = tmp_23_reg_1568;
    end else begin
        grp_fu_514_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_514_p1 = tmp_27_2_2_reg_1608_pp0_iter10_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_514_p1 = tmp_27_2_reg_1598_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_514_p1 = tmp_27_1_1_reg_1588_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_514_p1 = tmp_27_0_2_reg_1578_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_514_p1 = 64'd0;
    end else begin
        grp_fu_514_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_519_p0 = tmp_28_2_reg_1643;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_519_p0 = tmp_28_1_1_reg_1633;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_519_p0 = tmp_28_0_2_reg_1623;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_519_p0 = tmp_24_reg_1613;
    end else begin
        grp_fu_519_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_519_p1 = tmp_27_2_1_reg_1603_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_519_p1 = tmp_27_1_2_reg_1593_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_519_p1 = tmp_27_1_reg_1583_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_519_p1 = tmp_27_0_1_reg_1573_pp0_iter2_reg;
    end else begin
        grp_fu_519_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_524_p0 = padded_image_load_8_reg_1563;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_524_p0 = padded_image_load_6_reg_1553;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_524_p0 = padded_image_load_4_reg_1538;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_524_p0 = padded_image_load_2_reg_1513;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_524_p0 = padded_image_load_reg_1482;
    end else begin
        grp_fu_524_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_524_p1 = kernal_mat_load_8_reg_1403;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_524_p1 = kernal_mat_load_6_reg_1393;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_524_p1 = kernal_mat_load_4_reg_1383;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_524_p1 = kernal_mat_load_2_reg_1373;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_524_p1 = kernal_mat_load_reg_1363;
    end else begin
        grp_fu_524_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_528_p0 = padded_image_load_7_reg_1558;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_528_p0 = padded_image_load_5_reg_1543;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_528_p0 = padded_image_load_3_reg_1518;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_528_p0 = padded_image_load_1_reg_1487;
    end else begin
        grp_fu_528_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_528_p1 = kernal_mat_load_7_reg_1398;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_528_p1 = kernal_mat_load_5_reg_1388;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_528_p1 = kernal_mat_load_3_reg_1378;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_528_p1 = kernal_mat_load_1_reg_1368;
    end else begin
        grp_fu_528_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        input_mat_address0 = tmp_50_cast_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_mat_address0 = tmp_20_cast_fu_610_p1;
    end else begin
        input_mat_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (~((exitcond_flatten_fu_538_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        input_mat_ce0 = 1'b1;
    end else begin
        input_mat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten_fu_538_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond_flatten_fu_538_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        input_mat_we0 = 1'b1;
    end else begin
        input_mat_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        kernal_mat_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        kernal_mat_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        kernal_mat_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        kernal_mat_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        kernal_mat_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        kernal_mat_address0 = tmp_30_cast_fu_676_p1;
    end else begin
        kernal_mat_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        kernal_mat_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        kernal_mat_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        kernal_mat_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        kernal_mat_address1 = 64'd2;
    end else begin
        kernal_mat_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (~((exitcond4_fu_655_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state4)))) begin
        kernal_mat_ce0 = 1'b1;
    end else begin
        kernal_mat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        kernal_mat_ce1 = 1'b1;
    end else begin
        kernal_mat_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond4_fu_655_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond4_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        kernal_mat_we0 = 1'b1;
    end else begin
        kernal_mat_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        padded_image_address0 = tmp_46_cast_fu_1127_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        padded_image_address0 = tmp_48_cast_fu_1076_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        padded_image_address0 = tmp_42_cast_fu_1038_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        padded_image_address0 = tmp_41_cast_fu_974_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        padded_image_address0 = tmp_51_cast_fu_832_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        padded_image_address0 = tmp_29_cast_fu_724_p1;
    end else begin
        padded_image_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            padded_image_address1 = tmp_49_cast_fu_1137_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            padded_image_address1 = tmp_43_cast_fu_1117_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            padded_image_address1 = tmp_45_cast_fu_1067_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            padded_image_address1 = tmp_47_cast_fu_1058_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            padded_image_address1 = tmp_44_cast_fu_1005_p1;
        end else begin
            padded_image_address1 = 'bx;
        end
    end else begin
        padded_image_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        padded_image_ce0 = 1'b1;
    end else begin
        padded_image_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        padded_image_ce1 = 1'b1;
    end else begin
        padded_image_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        padded_image_d0 = input_mat_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        padded_image_d0 = 64'd0;
    end else begin
        padded_image_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        padded_image_we0 = 1'b1;
    end else begin
        padded_image_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if ((~((exitcond_flatten_fu_538_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond_flatten_fu_538_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((exitcond_flatten_fu_538_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond_flatten_fu_538_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond2_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((exitcond4_fu_655_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond4_fu_655_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((exitcond4_fu_655_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0)) & (exitcond4_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_2_fu_735_p2 == 1'd1) & (tmp_8_fu_729_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((tmp_8_fu_729_p2 == 1'd1) & (tmp_2_fu_735_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((exitcond5_fu_741_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond7_fu_797_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten1_fu_864_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten1_fu_864_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if ((~((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0)) & (exitcond8_fu_1145_p2 == 1'd1) & (data_out_V_last_V_1_state[1'd0] == 1'b0) & (data_out_V_data_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0)) & (exitcond8_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            if (((exitcond_fu_1185_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (data_out_V_data_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            if (((1'b1 == ap_CS_fsm_state75) & (data_out_V_data_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((exitcond_flatten_fu_538_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0));
end

assign ap_block_state20_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((exitcond4_fu_655_p2 == 1'd0) & (data_in_V_data_0_vld_out == 1'b0));
end

assign ap_block_state40_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state72 = ((data_out_V_last_V_1_ack_in == 1'b0) | (data_out_V_data_1_ack_in == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign data_in_TREADY = data_in_V_last_V_0_state[1'd1];

assign data_in_V_data_0_ack_in = data_in_V_data_0_state[1'd1];

assign data_in_V_data_0_load_A = (~data_in_V_data_0_sel_wr & data_in_V_data_0_state_cmp_full);

assign data_in_V_data_0_load_B = (data_in_V_data_0_state_cmp_full & data_in_V_data_0_sel_wr);

assign data_in_V_data_0_sel = data_in_V_data_0_sel_rd;

assign data_in_V_data_0_state_cmp_full = ((data_in_V_data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign data_in_V_data_0_vld_in = data_in_TVALID;

assign data_in_V_data_0_vld_out = data_in_V_data_0_state[1'd0];

assign data_in_V_last_V_0_vld_in = data_in_TVALID;

assign data_out_TDATA = data_out_V_data_1_data_out;

assign data_out_TLAST = data_out_V_last_V_1_data_out;

assign data_out_TVALID = data_out_V_last_V_1_state[1'd0];

assign data_out_V_data_1_ack_in = data_out_V_data_1_state[1'd1];

assign data_out_V_data_1_ack_out = data_out_TREADY;

assign data_out_V_data_1_load_A = (~data_out_V_data_1_sel_wr & data_out_V_data_1_state_cmp_full);

assign data_out_V_data_1_load_B = (data_out_V_data_1_state_cmp_full & data_out_V_data_1_sel_wr);

assign data_out_V_data_1_sel = data_out_V_data_1_sel_rd;

assign data_out_V_data_1_state_cmp_full = ((data_out_V_data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign data_out_V_data_1_vld_out = data_out_V_data_1_state[1'd0];

assign data_out_V_last_V_1_ack_in = data_out_V_last_V_1_state[1'd1];

assign data_out_V_last_V_1_ack_out = data_out_TREADY;

assign data_out_V_last_V_1_load_A = (~data_out_V_last_V_1_sel_wr & data_out_V_last_V_1_state_cmp_full);

assign data_out_V_last_V_1_load_B = (data_out_V_last_V_1_state_cmp_full & data_out_V_last_V_1_sel_wr);

assign data_out_V_last_V_1_sel = data_out_V_last_V_1_sel_rd;

assign data_out_V_last_V_1_state_cmp_full = ((data_out_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign data_out_V_last_V_1_vld_out = data_out_V_last_V_1_state[1'd0];

assign exitcond1_fu_556_p2 = ((j_reg_381 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond2_fu_621_p2 = ((i_1_reg_392 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond3_fu_876_p2 = ((ap_phi_mux_j_3_phi_fu_485_p4 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond4_fu_655_p2 = ((j_1_reg_403 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond5_fu_741_p2 = ((i_2_reg_437 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond7_fu_797_p2 = ((j_2_reg_448 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond8_fu_1145_p2 = ((i_4_reg_492 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_864_p2 = ((ap_phi_mux_indvar_flatten1_phi_fu_463_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_538_p2 = ((indvar_flatten_reg_359 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_fu_1185_p2 = ((j_4_reg_503 == 2'd3) ? 1'b1 : 1'b0);

assign i_5_fu_550_p2 = (i_reg_370 + 2'd1);

assign i_6_fu_627_p2 = (i_1_reg_392 + 2'd1);

assign i_7_fu_747_p2 = (i_2_reg_437 + 2'd1);

assign i_8_fu_858_p2 = (ap_phi_mux_i_3_phi_fu_474_p4 + 2'd1);

assign i_8_mid1_fu_950_p2 = (ap_phi_mux_i_3_phi_fu_474_p4 ^ 2'd2);

assign i_9_fu_1151_p2 = (i_4_reg_492 + 2'd1);

assign indvar_flatten_next1_fu_870_p2 = (ap_phi_mux_indvar_flatten1_phi_fu_463_p4 + 4'd1);

assign indvar_flatten_next_fu_544_p2 = (indvar_flatten_reg_359 + 4'd1);

assign indvarinc1_fu_709_p2 = (invdar1_reg_426 + 3'd1);

assign indvarinc_fu_681_p2 = (invdar_reg_414 + 3'd1);

assign j_3_cast_fu_1030_p1 = j_3_mid2_reg_1417;

assign j_3_mid2_fu_882_p3 = ((exitcond3_fu_876_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_j_3_phi_fu_485_p4);

assign j_5_fu_615_p2 = (j_mid2_fu_562_p3 + 2'd1);

assign j_6_fu_661_p2 = (j_1_reg_403 + 2'd1);

assign j_7_fu_803_p2 = (j_2_reg_448 + 2'd1);

assign j_8_fu_1191_p2 = (j_4_reg_503 + 2'd1);

assign j_9_fu_989_p2 = (j_3_mid2_fu_882_p3 + 2'd1);

assign j_mid2_fu_562_p3 = ((exitcond1_fu_556_p2[0:0] === 1'b1) ? 2'd0 : j_reg_381);

assign p_shl1_cast_fu_1169_p1 = p_shl1_fu_1161_p3;

assign p_shl1_fu_1161_p3 = {{i_4_reg_492}, {2'd0}};

assign p_shl2_cast_fu_590_p1 = tmp_fu_582_p3;

assign p_shl3_cast_fu_645_p1 = tmp_4_fu_637_p3;

assign p_shl4_cast_fu_699_p1 = tmp_6_fu_691_p3;

assign p_shl5_cast_fu_765_p1 = tmp_13_fu_757_p3;

assign p_shl6_cast_fu_787_p1 = tmp_17_fu_779_p3;

assign p_shl7_cast_fu_910_p1 = tmp_20_fu_902_p3;

assign p_shl8_cast_fu_1020_p1 = tmp_26_fu_1013_p3;

assign p_shl9_cast_fu_1102_p1 = tmp_28_fu_1094_p3;

assign p_shl_cast_fu_848_p1 = p_shl_fu_840_p3;

assign p_shl_cast_mid1_fu_932_p1 = p_shl_mid1_fu_924_p3;

assign p_shl_fu_840_p3 = {{ap_phi_mux_i_3_phi_fu_474_p4}, {2'd0}};

assign p_shl_mid1_fu_924_p3 = {{i_8_fu_858_p2}, {2'd0}};

assign p_sum1_cast_fu_1141_p1 = $signed(p_sum1_reg_1450_pp0_iter10_reg);

assign p_sum1_fu_983_p2 = (tmp_10_mid2_fu_942_p3 + tmp_16_cast_fu_979_p1);

assign p_sum_cast_fu_1206_p1 = $signed(p_sum_fu_1201_p2);

assign p_sum_fu_1201_p2 = (tmp_14_reg_1661 + tmp_18_cast_fu_1197_p1);

assign tmp_10_fu_852_p2 = (p_shl_cast_fu_848_p1 - tmp_9_cast5_fu_836_p1);

assign tmp_10_mid1_fu_936_p2 = (p_shl_cast_mid1_fu_932_p1 - tmp_9_cast5_mid1_fu_920_p1);

assign tmp_10_mid2_fu_942_p3 = ((exitcond3_fu_876_p2[0:0] === 1'b1) ? tmp_10_mid1_fu_936_p2 : tmp_10_fu_852_p2);

assign tmp_11_cast_fu_809_p1 = j_2_reg_448;

assign tmp_11_fu_671_p2 = (tmp_5_reg_1293 + tmp_cast_fu_667_p1);

assign tmp_12_cast_fu_823_p1 = j_7_fu_803_p2;

assign tmp_13_cast2_fu_1157_p1 = i_4_reg_492;

assign tmp_13_fu_757_p3 = {{i_2_reg_437}, {2'd0}};

assign tmp_14_fu_1173_p2 = (p_shl1_cast_fu_1169_p1 - tmp_13_cast2_fu_1157_p1);

assign tmp_15_fu_1179_p2 = ((i_4_reg_492 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_16_cast1_fu_964_p1 = j_3_mid2_fu_882_p3;

assign tmp_16_cast_fu_979_p1 = j_3_mid2_fu_882_p3;

assign tmp_16_fu_769_p2 = (p_shl5_cast_fu_765_p1 - tmp_3_cast_fu_753_p1);

assign tmp_17_fu_779_p3 = {{i_7_fu_747_p2}, {2'd0}};

assign tmp_18_cast_fu_1197_p1 = j_4_reg_503;

assign tmp_18_fu_791_p2 = (tmp_5_cast_fu_775_p1 + p_shl6_cast_fu_787_p1);

assign tmp_19_fu_1211_p2 = ((j_4_reg_503 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_1_cast_fu_633_p1 = i_1_reg_392;

assign tmp_1_fu_604_p2 = (tmp_s_fu_594_p2 + tmp_4_cast_fu_600_p1);

assign tmp_20_cast_fu_610_p1 = $signed(tmp_1_fu_604_p2);

assign tmp_20_fu_902_p3 = {{tmp_9_mid2_fu_890_p3}, {2'd0}};

assign tmp_21_1_mid2_cast_fu_1010_p1 = tmp_21_1_mid2_reg_1433;

assign tmp_21_1_mid2_fu_956_p3 = ((exitcond3_fu_876_p2[0:0] === 1'b1) ? i_8_mid1_fu_950_p2 : i_8_fu_858_p2);

assign tmp_21_2_mid2_cast_fu_1090_p1 = tmp_21_2_mid2_v_fu_1084_p2;

assign tmp_21_2_mid2_v_fu_1084_p2 = (tmp_21_2_mid2_v_v_fu_1081_p1 + 3'd2);

assign tmp_21_2_mid2_v_v_fu_1081_p1 = tmp_9_mid2_reg_1422;

assign tmp_24_0_2_fu_1043_p2 = (j_3_cast_fu_1030_p1 + 3'd2);

assign tmp_25_0_1_cast_fu_995_p1 = j_9_fu_989_p2;

assign tmp_25_0_2_cast_fu_1049_p1 = tmp_24_0_2_fu_1043_p2;

assign tmp_25_fu_914_p2 = (p_shl7_cast_fu_910_p1 + tmp_9_mid2_cast_fu_898_p1);

assign tmp_26_fu_1013_p3 = {{tmp_21_1_mid2_reg_1433}, {2'd0}};

assign tmp_27_fu_1024_p2 = (p_shl8_cast_fu_1020_p1 + tmp_21_1_mid2_cast_fu_1010_p1);

assign tmp_28_fu_1094_p3 = {{tmp_21_2_mid2_v_fu_1084_p2}, {2'd0}};

assign tmp_29_cast_fu_724_p1 = tmp_9_fu_719_p2;

assign tmp_29_fu_1106_p2 = (p_shl9_cast_fu_1102_p1 + tmp_21_2_mid2_cast_fu_1090_p1);

assign tmp_2_fu_735_p2 = ((invdar_reg_414 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_30_cast_fu_676_p1 = $signed(tmp_11_fu_671_p2);

assign tmp_30_fu_968_p2 = (tmp_16_cast1_fu_964_p1 + tmp_25_fu_914_p2);

assign tmp_31_fu_1033_p2 = (tmp_16_cast1_reg_1439 + tmp_27_fu_1024_p2);

assign tmp_32_fu_1112_p2 = (tmp_16_cast1_reg_1439 + tmp_29_fu_1106_p2);

assign tmp_33_fu_999_p2 = (tmp_25_0_1_cast_fu_995_p1 + tmp_25_fu_914_p2);

assign tmp_34_fu_1063_p2 = (tmp_25_0_1_cast_reg_1460 + tmp_27_reg_1471);

assign tmp_35_fu_1122_p2 = (tmp_25_0_1_cast_reg_1460 + tmp_29_fu_1106_p2);

assign tmp_36_fu_1053_p2 = (tmp_25_0_2_cast_fu_1049_p1 + tmp_25_reg_1428);

assign tmp_37_fu_1072_p2 = (tmp_25_0_2_cast_reg_1492 + tmp_27_reg_1471);

assign tmp_38_fu_1132_p2 = (tmp_25_0_2_cast_reg_1492 + tmp_29_fu_1106_p2);

assign tmp_39_fu_813_p2 = (tmp_16_reg_1335 + tmp_11_cast_fu_809_p1);

assign tmp_3_cast_fu_753_p1 = i_2_reg_437;

assign tmp_40_fu_827_p2 = (tmp_18_reg_1340 + tmp_12_cast_fu_823_p1);

assign tmp_41_cast_fu_974_p1 = tmp_30_fu_968_p2;

assign tmp_42_cast_fu_1038_p1 = tmp_31_fu_1033_p2;

assign tmp_43_cast_fu_1117_p1 = tmp_32_fu_1112_p2;

assign tmp_44_cast_fu_1005_p1 = tmp_33_fu_999_p2;

assign tmp_45_cast_fu_1067_p1 = tmp_34_fu_1063_p2;

assign tmp_46_cast_fu_1127_p1 = tmp_35_fu_1122_p2;

assign tmp_47_cast_fu_1058_p1 = tmp_36_fu_1053_p2;

assign tmp_48_cast_fu_1076_p1 = tmp_37_fu_1072_p2;

assign tmp_49_cast_fu_1137_p1 = tmp_38_reg_1533;

assign tmp_4_cast_fu_600_p1 = j_mid2_fu_562_p3;

assign tmp_4_fu_637_p3 = {{i_1_reg_392}, {2'd0}};

assign tmp_50_cast_fu_818_p1 = $signed(tmp_39_fu_813_p2);

assign tmp_51_cast_fu_832_p1 = tmp_40_reg_1358;

assign tmp_5_cast_fu_775_p1 = i_7_fu_747_p2;

assign tmp_5_fu_649_p2 = (p_shl3_cast_fu_645_p1 - tmp_1_cast_fu_633_p1);

assign tmp_6_cast_fu_687_p1 = invdar_reg_414;

assign tmp_6_fu_691_p3 = {{invdar_reg_414}, {2'd0}};

assign tmp_7_cast_fu_715_p1 = invdar1_reg_426;

assign tmp_7_fu_703_p2 = (p_shl4_cast_fu_699_p1 + tmp_6_cast_fu_687_p1);

assign tmp_8_fu_729_p2 = ((invdar1_reg_426 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_9_cast5_fu_836_p1 = ap_phi_mux_i_3_phi_fu_474_p4;

assign tmp_9_cast5_mid1_fu_920_p1 = i_8_fu_858_p2;

assign tmp_9_fu_719_p2 = (tmp_7_reg_1311 + tmp_7_cast_fu_715_p1);

assign tmp_9_mid2_cast_fu_898_p1 = tmp_9_mid2_fu_890_p3;

assign tmp_9_mid2_fu_890_p3 = ((exitcond3_fu_876_p2[0:0] === 1'b1) ? i_8_fu_858_p2 : ap_phi_mux_i_3_phi_fu_474_p4);

assign tmp_cast_fu_667_p1 = j_1_reg_403;

assign tmp_fu_582_p3 = {{tmp_mid2_v_fu_570_p3}, {2'd0}};

assign tmp_last_V_fu_1217_p2 = (tmp_19_fu_1211_p2 & tmp_15_reg_1666);

assign tmp_mid2_cast_fu_578_p1 = tmp_mid2_v_fu_570_p3;

assign tmp_mid2_v_fu_570_p3 = ((exitcond1_fu_556_p2[0:0] === 1'b1) ? i_5_fu_550_p2 : i_reg_370);

assign tmp_s_fu_594_p2 = (p_shl2_cast_fu_590_p1 - tmp_mid2_cast_fu_578_p1);

always @ (posedge ap_clk) begin
    tmp_16_cast1_reg_1439[5:2] <= 4'b0000;
    tmp_25_0_1_cast_reg_1460[5:2] <= 4'b0000;
    tmp_25_0_2_cast_reg_1492[5:3] <= 3'b000;
end

endmodule //Conv
